unit PagamentosMovimentoDAO;

interface
uses PagamentosMovimentoDTO, FireDAC.Comp.Client, System.SysUtils;

type
  TPagamentosMovimentoDAO = class
  private
    Qry: TFDQuery;
    FPagamento: TPagamentosMovimentoDTO;
  public
    constructor Create;
    destructor Destroy; override;
    function Encontrar(Codigo: Integer): TPagamentosMovimentoDTO;
    function Salvar(Pagamento: TPagamentosMovimentoDTO): Boolean;
    function Alterar(Pagamento: TPagamentosMovimentoDTO): Boolean;
  end;

implementation

uses dmConexao,MovimentoDTO;

{ TPagamentosMovimentoDAO }

constructor TPagamentosMovimentoDAO.Create;
begin
  Qry := TFDQuery.Create(nil);
  FPagamento := TPagamentosMovimentoDTO.Create;
  Qry.Connection := fdmConexao.BANCO;
end;

destructor TPagamentosMovimentoDAO.Destroy;
begin
  Qry.Free;
  FPagamento.Free;
  inherited;
end;

function TPagamentosMovimentoDAO.Encontrar(Codigo: Integer): TPagamentosMovimentoDTO;
begin
  Qry.SQL.Clear;
  Qry.SQL.Add('SELECT * FROM PAGAMENTOS WHERE PAG_CODIGO = :PAG_CODIGO');
  Qry.Params.ParamByName('PAG_CODIGO').AsInteger := Codigo;
  Qry.Open;
  if Qry.RecordCount > 0 then
  begin
    FPagamento.Codigo := Qry.FieldByName('PAG_CODIGO').AsInteger;
    FPagamento.Movimento := Qry.FieldByName('PAG_Movimento').AsString;
    FPagamento.DataVcto := Qry.FieldByName('PAG_DATAVCTO').AsDateTime;
    FPagamento.DataVenda := Qry.FieldByName('PAG_DATAVENDA').AsDateTime;
    FPagamento.NumeroDaParcela := Qry.FieldByName('PAG_NUMERODAPARCELA').AsInteger;
    FPagamento.DataPagto := Qry.FieldByName('PAG_DATAPAGTO').AsDateTime;
    FPagamento.Juros := Qry.FieldByName('PAG_JUROS').AsFloat;
    FPagamento.Multa := Qry.FieldByName('PAG_MULTA').AsFloat;
    FPagamento.Observacoes := Qry.FieldByName('PAG_OBSERVACOES').AsString;
    FPagamento.Valor := Qry.FieldByName('PAG_VALOR').AsFloat;
    Result := FPagamento;
  end
  else
    Result := nil;
end;

function TPagamentosMovimentoDAO.Salvar(Pagamento: TPagamentosMovimentoDTO): Boolean;
begin
  try
    fdmConexao.BANCO.StartTransaction;
    Qry.SQL.Clear;
    Qry.SQL.Add('INSERT INTO PAGAMENTOS (PAG_CODIGO, PAG_MOVIMENTO,PAG_DATAVENDA, PAG_DATAVCTO, '+
                'PAG_NUMERODAPARCELA, PAG_JUROS, PAG_MULTA, PAG_OBSERVACOES,PAG_VALOR) VALUES '+
                '(:PAG_CODIGO, :PAG_MOVIMENTO, :PAG_DATAVENDA, :PAG_DATAVCTO, :PAG_NUMERODAPARCELA, :PAG_JUROS, :PAG_MULTA, :PAG_OBSERVACOES, :PAG_VALOR)');

    Qry.ParamByName('PAG_CODIGO').AsString := fdmConexao.retornaCodigoMaximo('pag_codigo','pagamentos');
    Qry.ParamByName('PAG_Movimento').AsString := Pagamento.Movimento;
    Qry.ParamByName('PAG_DATAVENDA').AsDateTime := Date;
    Qry.ParamByName('PAG_DATAVCTO').AsDateTime := Pagamento.DataVcto;
    Qry.ParamByName('PAG_NUMERODAPARCELA').AsInteger := Pagamento.NumeroDaParcela;
    Qry.ParamByName('PAG_JUROS').AsFloat := Pagamento.Juros;
    Qry.ParamByName('PAG_MULTA').AsFloat := Pagamento.Multa;
    Qry.ParamByName('PAG_OBSERVACOES').AsString := Pagamento.Observacoes;
    Qry.ParamByName('PAG_Valor').AsFloat := Pagamento.Valor;

    Qry.ExecSQL;
    fdmConexao.BANCO.Commit;
    Result := True;
  except
    on E: Exception do
    begin
      fdmConexao.BANCO.Rollback;
      Result := False;
      raise Exception.Create('Erro ao tentar salvar o registro: '+E.Message);
    end;
  end;
end;

function TPagamentosMovimentoDAO.Alterar(Pagamento: TPagamentosMovimentoDTO): Boolean;
begin
  try
    fdmConexao.BANCO.StartTransaction;
    Qry.SQL.Clear;
    Qry.SQL.Add('UPDATE PAGAMENTOS SET PAG_DATAVENDA=:PAG_DATAVENDA, PAG_DATAVCTO=:PAG_DATAVCTO, '+
                'PAG_NUMERODAPARCELA=:PAG_NUMERODAPARCELA, PAG_DATAPAGTO=:PAG_DATAPAGTO, PAG_JUROS=:PAG_JUROS, '+
                'PAG_MULTA=:PAG_MULTA, PAG_OBSERVACOES=:PAG_OBSERVACOES,PAG_VALOR=:PAG_Valor WHERE PAG_CODIGO=:PAG_CODIGO');
    Qry.ParamByName('PAG_CODIGO').AsInteger := Pagamento.Codigo;
    Qry.ParamByName('PAG_DATAVCTO').AsDateTime := Pagamento.DataVcto;
    Qry.ParamByName('PAG_NUMERODAPARCELA').AsInteger := Pagamento.NumeroDaParcela;
    Qry.ParamByName('PAG_DATAPAGTO').AsDateTime := Pagamento.DataPagto;
    Qry.ParamByName('PAG_JUROS').AsFloat := Pagamento.Juros;
    Qry.ParamByName('PAG_MULTA').AsFloat := Pagamento.Multa;
    Qry.ParamByName('PAG_VALOR').AsFloat := Pagamento.Valor;
    Qry.ParamByName('PAG_OBSERVACOES').AsString := Pagamento.Observacoes;
    Qry.ExecSQL;
    fdmConexao.BANCO.Commit;
    Result := True;
  except
    on E: Exception do
    begin
      fdmConexao.BANCO.Rollback;
      Result := False;
      raise Exception.Create('Erro ao tentar alterar o registro: '+E.Message);
    end;
  end;
end;

end.


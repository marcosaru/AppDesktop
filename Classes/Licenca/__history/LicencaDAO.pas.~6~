unit LicencaDAO;

interface

uses
  LicencaDTO, System.SysUtils, FireDAC.Stan.Intf, FireDAC.Stan.Option,
    FireDAC.Stan.Param, FireDAC.Stan.Error, FireDAC.DatS, FireDAC.Phys.Intf,
    FireDAC.DApt.Intf, FireDAC.Stan.Async, FireDAC.DApt, Data.DB,
    FireDAC.Comp.DataSet, FireDAC.Comp.Client;

type
  TLicencaDAO = class
  private
    QryCadastro : TFDQuery;
  public
    function GetLicenca(Chave: string): TLicencaDTO;
    function salvar(Licenca:TLicencaDTO): boolean;

  end;

implementation

uses dmConexao;

function TLicencaDAO.GetLicenca(Chave: string): TLicencaDTO;
var
  SQLQuery: TFDQuery;
begin
  SQLQuery := TFDQuery.Create(nil);
  try
    SQLQuery.Connection := fdmConexao.BANCO; // Adicione aqui a conexão com o seu banco de dados
    SQLQuery.SQL.Add('SELECT * FROM Licenca WHERE Chave = :Chave');
    SQLQuery.ParamByName('Chave').AsString := Chave;
    SQLQuery.Open;

    if not SQLQuery.IsEmpty then
    begin
      Result := TLicencaDTO.Create;
      Result.Id := SQLQuery.FieldByName('Id').AsInteger;
      Result.Chave := SQLQuery.FieldByName('Chave').AsString;
      Result.DataExpiracao := SQLQuery.FieldByName('DataExpiracao').AsDateTime;
    end
    else
      Result := nil;
  finally
    SQLQuery.Free;
  end;
end;

function TLicencaDAO.salvar(Licenca: TLicencaDTO): boolean;
begin
  try
    QryCadastro := TFDQuery.Create(nill);
    QryCadastro.Connection := fdmConexao.BANCO;
    QryCadastro.SQL.Clear;

    fdmConexao.BANCO.StartTransaction;

    QryCadastro.SQL.Add('INSERT INTO LICENCA (ID,CHAVE,DATAEXPIRACAO) ' +
                        'VALUES (:ID,:CHAVE,:DATAEXPIRACAO)');

    QryCadastro.ParamByName('ID').AsInteger := Licenca.Id;
    QryCadastro.ParamByName('CHAVE').AsString := Licenca.Chave;
    QryCadastro.ParamByName('DATAEXPIRACAO').AsDateTime := Licenca.DataExpiracao;

    QryCadastro.ExecSQL;

    fdmConexao.BANCO.Commit;

  finally

  end;
end;

end.

